{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducers.js","redux/store.js","redux/phonebook/phonebook-selectors.js","components/contacts/ContactsList/ContactsList.styled.js","components/contacts/ContactsList/ContactsList.jsx","components/contacts/ContactsForm/ContactsForm.styled.js","components/contacts/ContactsForm/ContactsForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/App/App.styled.js","components/App/App.js","index.jsx"],"names":["newContact","createAction","data","payload","id","uuidv4","deleteContacts","changeFilter","contacts","createReducer","name","number","state","find","contact","toLowerCase","alert","filter","_state","combineReducers","persistConfig","key","storage","rootReducer","phonebook","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","getFilter","getFilteredContacts","getContacts","normalizedFilter","includes","Button","styled","button","List","ul","Name","span","Item","li","ContactList","useSelector","dispatch","useDispatch","map","onClick","onDeleteContacts","Form","form","Label","label","Input","input","ContactForm","useState","setName","setNumber","nameId","telId","handleChange","e","target","value","onSubmit","preventDefault","htmlFor","type","pattern","title","required","onChange","Filter","event","onBlur","Title","h2","div","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.103af8a3.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const newContact = createAction('phonebook/add', data => ({\n  payload: {\n    id: uuidv4(),\n    ...data,\n  },\n}));\n\nexport const deleteContacts = createAction('phonebook/delete');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { deleteContacts, newContact, changeFilter } from './phonebook-actions';\n\nconst initialReducer = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst contacts = createReducer(initialReducer, {\n  [newContact]: (state, { payload }) => {\n    const variable = state.find(\n      contact => contact.name.toLowerCase() === payload.name.toLowerCase(),\n    );\n    if (variable) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    return [payload, ...state];\n  },\n  [deleteContacts]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_state, { payload }) => payload,\n});\n\nexport default combineReducers({ contacts, filter });\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  phonebook: phonebookReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nexport const persistor = persistStore(store);\n","export const getContacts = state => state.phonebook.contacts;\nexport const getFilter = state => state.phonebook.filter;\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 30%;\n  border-width: 0;\n  line-height: 40px;\n  border-radius: 20px;\n  box-shadow: 4px 4px 8px 0px rgba(34, 60, 80, 0.2);\n  text-transform: uppercase;\n  font-size: 12px;\n  cursor: pointer;\n\n  background-color: grey;\n  color: white;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Name = styled.span`\n  display: block;\n  padding: 0 15px;\n  font-family: 'Roboto', sans-serif;\n  color: black;\n  font-size: 14px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  max-width: 400px;\n  height: 45px;\n  padding: 10px;\n  margin-top: 6px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\n  list-style: none;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../../redux/phonebook/phonebook-actions';\nimport { getFilteredContacts } from '../../../redux/phonebook/phonebook-selectors';\nimport { Button, List, Name, Item } from './ContactsList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const onDeleteContacts = id => dispatch(deleteContacts(id));\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          <Name>\n            {name} : {number}\n          </Name>\n          <Button onClick={() => onDeleteContacts(id)}>Delete</Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDeleteContacts: PropTypes.func,\n};\n","import styled from '@emotion/styled';\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  max-width: 400px;\r\n  padding: 10px;\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  margin-bottom: 6px;\r\n  padding: 5px;\r\n  border: 1px solid #7d847d;\r\n  border-radius: 4px;\r\n  outline: none;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  height: 38px;\r\n  margin-top: 5px;\r\n  border-width: inherit;\r\n  border-radius: 5px;\r\n  outline: none;\r\n  color: white;\r\n  background-color: green;\r\n  cursor: pointer;\r\n`;\r\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { newContact } from '../../../redux/phonebook/phonebook-actions';\nimport { Form, Label, Input, Button } from './ContactsForm.styled';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (name, number) => dispatch(newContact({ name, number }));\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nameId}>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          id={nameId}\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n\n      <Label htmlFor={telId}>\n        Telephone\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          id={telId}\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add to contacts</Button>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  max-width: 400px;\r\n  margin-top: 23px;\r\n  padding: 10px;\r\n  border-radius: 1px;\r\n  color: green;\r\n\r\n  box-shadow: 0px 1px 2px 0px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  margin-bottom: 6px;\r\n  padding: 5px;\r\n  border: 1px solid #7d847d;\r\n  border-radius: 4px;\r\n  outline: none;\r\n`;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeHandler = event => dispatch(changeFilter(event.target.value));\n  const onBlurHandler = () => dispatch(changeFilter(''));\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={onChangeHandler}\n        onBlur={onBlurHandler}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h2`\r\n  display: block;\r\n  width: 400px;\r\n  margin: 20px;\r\n  font-family: 'Roboto', sans-serif;\r\n  color: green;\r\n  text-transform: uppercase;\r\n  text-align: center;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  margin: 10px;\r\n`;\r\n","import ContactList from '../contacts/ContactsList/ContactsList.jsx';\nimport ContactForm from '../contacts/ContactsForm/ContactsForm.jsx';\nimport Filter from '../Filter/Filter.jsx';\nimport { Title } from './App.styled';\n\nexport default function App() {\n  return (\n    <div>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}